on:
  push:
    branches: [main]
  workflow_dispatch:

name: pkgdown

jobs:
  pkgdown:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: webfactory/ssh-agent@v0.6.0
        with:
          ssh-private-key: ${{ secrets.LOAD_CLINDATA }}

      - name: Actions setup
        uses: actions/checkout@v2
        with:
          ref: main

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-tinytex@v2

      - name: install packages and generate sample reports
        shell: Rscript {0}
        run: |
          install.packages("devtools")
          install.packages("tidyverse")
          devtools::install(dependencies=TRUE)
          devtools::install_github('Gilead-BioStats/clindata')

          lData <- list(
              dfSUBJ = clindata::rawplus_dm,
              dfAE = clindata::rawplus_ae,
              dfPD = clindata::ctms_protdev,
              dfLB = clindata::rawplus_lb,
              dfSTUDCOMP = clindata::rawplus_studcomp,
              dfSDRGCOMP = clindata::rawplus_sdrgcomp %>% dplyr::filter(.data$phase == 'Blinded Study Drug Completion'),
              dfDATACHG = clindata::edc_data_points,
              dfDATAENT = clindata::edc_data_pages,
              dfQUERY = clindata::edc_queries,
              dfENROLL = clindata::rawplus_enroll
          )
          mapping_wf <- MakeWorkflowList(strNames = "data_mapping")
          mapped <- RunWorkflows(mapping_wf, lData, bKeepInputData=TRUE)

          kri_wf <- MakeWorkflowList(strNames = "kri")
          kris <- RunWorkflows(kri_wf, mapped)

          # Step 3 - Create Reporting Data - Import Metadata and stack KRI Results
          lReporting_Input <- list(
              ctms_site = clindata::ctms_site,
              ctms_study = clindata::ctms_study,
              dfEnrolled = mapped$dfEnrolled,
              lWorkflows = kri_wf,
              lAnalysis = kris,
              dSnapshotDate = Sys.Date(),
              strStudyID = "ABC-123"
          )
          reporting_wf <- MakeWorkflowList(strNames = "reporting")
          reporting <- RunWorkflows(reporting_wf, lReporting_Input)

          lCharts <- MakeCharts(
            dfResults = reporting$dfResults,
            dfGroups = reporting$dfGroups,
            dfMetrics = reporting$dfMetrics,
            dfBounds = reporting$dfBounds
          )

          Report_KRI(
            lCharts = lCharts,
            dfResults =  reporting$dfResults,
            dfGroups =  reporting$dfGroups,
            dfMetrics = reporting$dfMetrics,
            strOutpath = "StandardReportSite.html"
          )

          ## Country Report
          cou_wf <- MakeWorkflowList(strNames = "cou")
          cous <- RunWorkflows(cou_wf, mapped)

          # Step 3 - Create Reporting Data - Import Metadata and stack KRI Results
          lReporting_Input_country <- list(
              ctms_site = clindata::ctms_site,
              ctms_study = clindata::ctms_study,
              dfEnrolled = mapped$dfEnrolled,
              lWorkflows = cou_wf,
              lAnalysis = cous,
              dSnapshotDate = Sys.Date(),
              strStudyID = "ABC-123"
          )
          reporting_wf_country <- MakeWorkflowList(strNames = "reporting")
          reporting_country <- RunWorkflows(reporting_wf_country, lReporting_Input_country)

          lCharts_country <- MakeCharts(
            dfResults = reporting_country$dfResults,
            dfGroups = reporting_country$dfGroups,
            dfMetrics = reporting_country$dfMetrics,
            dfBounds = reporting_country$dfBounds
          )

          Report_KRI(
            lCharts = lCharts_country,
            dfResults =  reporting_country$dfResults,
            dfGroups =  reporting_country$dfGroups,
            dfMetrics = reporting_country$dfMetrics,
            strOutpath = "StandardReportCountry.html"
          )


      - name: delete temp-report branch if it exists
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git push origin --delete temp-report || true

      - name: create temp-report branch and set remote
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git checkout -b temp-report
          git add StandardReportCountry.html
          git add StandardReportSite.html
          git commit -m "add reports"
          git remote set-branches --add origin temp-report
          git push -u origin temp-report

      - name: Deploy package
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'

      - name: Checkout temp-report branch
        uses: actions/checkout@v2
        with:
          ref: temp-report

      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: checkout gh-pages branch and commit sample reports; delete upstream temp-report branch
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git fetch
          git checkout origin/temp-report -- StandardReportCountry.html
          git checkout origin/temp-report -- StandardReportSite.html
          git checkout gh-pages
          git add StandardReportCountry.html
          git add StandardReportSite.html
          git commit -m "Add HTML"
          git push origin gh-pages
          git push origin --delete temp-report
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
