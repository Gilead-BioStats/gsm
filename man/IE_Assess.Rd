% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IE_Assess.R
\name{IE_Assess}
\alias{IE_Assess}
\title{Inclusion/Exclusion Assessment}
\usage{
IE_Assess(
  dfInput,
  nThreshold = 0.5,
  lTags = list(Assessment = "IE"),
  bChart = TRUE,
  bReturnChecks = FALSE,
  bQuiet = TRUE
)
}
\arguments{
\item{dfInput}{\code{data.frame} Input data, a data frame with one record per subject.}

\item{nThreshold}{\code{numeric} Threshold specification. Default: \code{0.5}}

\item{lTags}{\code{list} Assessment tags, a named list of tags describing the assessment that defaults to \code{list(Assessment="IE")}. \code{lTags} is returned as part of the assessment (\code{lAssess$lTags}) and each tag is added as a column in \code{lAssess$dfSummary}.}

\item{bChart}{\code{logical} Generate data visualization? Default: \code{TRUE}}

\item{bReturnChecks}{\code{logical} Return input checks from \code{is_mapping_valid}? Default: \code{FALSE}}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{list} Assessment, a named list with:
\itemize{
\item each data frame in the data pipeline
\itemize{
\item \code{dfInput}
\item \code{dfTransformed}, returned by {gsm::Transform_EventCount()}
\item \code{dfAnalyzed}, returned by {gsm::dfAnalyzed()}
\item \code{dfFlagged}, returned by {gsm::dfFlagged()}
\item \code{dfSummary}, returned by {gsm::dfSummary()}
}
\item assessment metadata
\itemize{
\item \code{strFunctionName}
\item \code{lParams}
\item \code{lTags}
}
\item output(s)
\itemize{
\item \code{chart}
}
}
}
\description{
Flag sites exhibiting aberrant or excessive rates of unmet or missing inclusion/exclusion (IE) criteria.
}
\details{
The IE Assessment uses the standard \href{https://github.com/Gilead-BioStats/gsm/wiki/Data-Pipeline-Vignette}{GSM data pipeline} to flag sites with IE issues. This assessment detects sites with excessive rates of unmet or
missing IE criteria, as defined by \code{nThreshold}. The count returned in the summary represents the
number of subjects at a given site with at least one unmet or missing IE criterion. Additional
details regarding the data pipeline and statistical methods are described below.
}
\section{Data specification}{
\if{html}{\out{
<table>
<thead>
<tr>
<th style="text-align:left;">
domain
</th>
<th style="text-align:left;">
col_key
</th>
<th style="text-align:left;">
col_value
</th>
<th style="text-align:left;">
vRequired
</th>
<th style="text-align:left;">
vUniqueCols
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">
dfInput
</td>
<td style="text-align:left;">
strIDCol
</td>
<td style="text-align:left;">
SubjectID
</td>
<td style="text-align:left;">
TRUE
</td>
<td style="text-align:left;">
TRUE
</td>
</tr>
<tr>
<td style="text-align:left;">
dfInput
</td>
<td style="text-align:left;">
strSiteCol
</td>
<td style="text-align:left;">
SiteID
</td>
<td style="text-align:left;">
TRUE
</td>
<td style="text-align:left;">
FALSE
</td>
</tr>
<tr>
<td style="text-align:left;">
dfInput
</td>
<td style="text-align:left;">
strCountCol
</td>
<td style="text-align:left;">
Count
</td>
<td style="text-align:left;">
TRUE
</td>
<td style="text-align:left;">
FALSE
</td>
</tr>
</tbody>
</table>
}}
}

\examples{
dfInput <- IE_Map_Raw()
ie_assessment <- IE_Assess(dfInput)

}
