% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RunQuery.R
\name{RunQuery}
\alias{RunQuery}
\title{Run a SQL query on a data frame or DuckDB table}
\usage{
RunQuery(strQuery, df, bUseSchema = FALSE, lColumnMapping = NULL)
}
\arguments{
\item{strQuery}{\code{character} SQL query to run, containing placeholders \code{"FROM df"}.}

\item{df}{\code{data.frame} or \code{tbl_dbi} A data frame or DuckDB lazy table to use in the SQL query.}
}
\value{
\code{data.frame} containing the results of the SQL query.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

\code{RunQuery} executes a SQL query on a data frame or a DuckDB lazy table, allowing dynamic use of local or database-backed data.
If a DuckDB connection is passed in as \code{df}, it operates on the existing connection. Otherwise, it creates a temporary DuckDB
table from the provided data frame for SQL processing.

The SQL query should include the placeholder \verb{FROM df} to indicate where the primary data source (\code{df}) should be referenced.
}
\examples{
df <- data.frame(
  Name = c("John", "Jane", "Bob"),
  Age = c(25, 30, 35),
  Salary = c(50000, 60000, 70000)
)
query <- "SELECT * FROM df WHERE AGE > 30"

result <- RunQuery(query, df)

}
