% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util-RunWorkflow.R
\name{RunWorkflow}
\alias{RunWorkflow}
\title{Run a single assessment}
\usage{
RunWorkflow(lWorkflow, lData, lMapping, bQuiet = TRUE, bFlowchart = FALSE)
}
\arguments{
\item{lWorkflow}{\code{list} A named list of metadata defining how each assessment should be run. Properties should include: \code{label} and \code{workflow}}

\item{lData}{\code{list} A named list of domain-level data frames. Names should match the values specified in \code{lMapping} and \code{lAssessments}, which are generally based on the expected inputs from \code{X_Map_Raw}.}

\item{lMapping}{\code{list} A named list identifying the columns needed in each data domain.}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}

\item{bFlowchart}{\code{logical} Create flowchart to show data pipeline? Default: \code{FALSE}}
}
\value{
\code{list} containing \code{lWorkflow} with \code{workflow}, \code{path}, \code{name}, \code{lData}, \code{lChecks}, \code{bStatus}, \code{checks}, and \code{lResults} added based on the results of the execution of \code{assessment$workflow}.

\code{list} containing \code{lAssessment} with \code{workflow}, \code{path}, \code{name}, \code{lData}, \code{lChecks}, \code{bStatus}, \code{checks}, and \code{lResults} added based on the results of the execution of \code{assessment$workflow}.
}
\description{
Attempts to run a single assessment (\code{lWorkflow}) using shared data (\code{lData}) and metadata (\code{lMapping}).
Calls \code{RunStep} for each item in \code{lWorkflow$workflow} and saves the results to \code{lWorkflow}
}
\examples{
lAssessments <- MakeWorkflowList()
lData <- list(
  dfAE = clindata::rawplus_ae,
  dfCONSENT = clindata::rawplus_consent,
  dfDISP = clindata::rawplus_dm,
  dfIE = clindata::rawplus_ie,
  dfLB = clindata::rawplus_lb,
  dfPD = clindata::rawplus_protdev,
  dfSUBJ = clindata::rawplus_dm
)

lMapping <- yaml::read_yaml(system.file("mappings", "mapping_rawplus.yaml", package = "gsm"))

output <- RunWorkflow(
  lAssessments$kri0001, # adverse event workflow
  lData,
  lMapping
)

}
