% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Analyze_NormalApprox.R
\name{Analyze_NormalApprox}
\alias{Analyze_NormalApprox}
\title{Funnel Plot Analysis with Normal Approximation for Binary and Rate Outcomes}
\usage{
Analyze_NormalApprox(dfTransformed, strType = "binary", bQuiet = TRUE)
}
\arguments{
\item{dfTransformed}{\code{data.frame} in format produced by \code{\link{Transform_Rate}}}

\item{strType}{\code{data.frame} in format produced by \code{\link{Transform_Rate}}}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{data.frame} with one row per site with columns: GroupID, Numerator, Numerator_Other, Denominator, Denominator_Other, Prop, Prop_Other, Metric, Estimate, Score.
}
\description{
Funnel Plot Analysis with Normal Approximation for Binary and Rate Outcomes
}
\details{
Creates analysis results data for percentage/rate data using funnel plot method with normal approximation.
}
\section{Statistical Methods}{

This function applies funnel plots using asymptotic limits based on normal approximation of binomial distribution for
the binary outcome, or normal approximation of Poisson distribution for the rate outcome with volume (the sample sizes
or total exposure of the sites) to assess data quality and safety.
}

\section{Data Specification}{

The input data (\code{dfTransformed}) is typically created using \code{\link{Transform_Rate}} and should be one record per site with required columns for:
\itemize{
\item \code{GroupID} - Site ID
\item \code{Numerator} - Total number of participants at site with event of interest/Total number of events of interest at site
\item \code{Denominator} - Total number of participants at site/Total number of days of exposure at site
\item \code{Metric} - Proportion of participants at site with event of interest/Rate of events at site (Numerator / Denominator)
}
}

\examples{
# Binary
dfInput <- Disp_Map_Raw()
dfTransformed <- Transform_Rate(
  dfInput,
  strGroupCol = "SiteID",
  strNumeratorCol = "Count",
  strDenominatorCol = "Total"
)
dfAnalyzed <- Analyze_NormalApprox(dfTransformed, strType = "binary")

# Rate
dfInput <- AE_Map_Raw() \%>\% na.omit()
dfTransformed <- Transform_Rate(
  dfInput,
  strGroupCol = "SiteID",
  strNumeratorCol = "Count",
  strDenominatorCol = "Exposure"
)
dfAnalyzed <- Analyze_NormalApprox(dfTransformed, strType = "rate")

}
