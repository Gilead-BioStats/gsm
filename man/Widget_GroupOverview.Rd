% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Widget_GroupOverview.R
\name{Widget_GroupOverview}
\alias{Widget_GroupOverview}
\title{Group Overview Widget}
\usage{
Widget_GroupOverview(
  dfResults,
  dfMetrics = NULL,
  dfGroups = NULL,
  strGroupLevel = NULL,
  strGroupSubset = "red",
  strGroupLabelKey = "InvestigatorLastName",
  bDebug = FALSE
)
}
\arguments{
\item{dfResults}{\code{data.frame} Output of \code{\link[=Summarize]{Summarize()}} and \code{\link[=BindResults]{BindResults()}}.
\code{\link[=MakeMetric]{MakeMetric()}}.}

\item{dfMetrics}{A data.frame of metric metadata, captured at the top of metric workflows and returned by \code{\link[=MakeMetric]{MakeMetric()}}}

\item{dfGroups}{\code{data.frame} Group metadata.}

\item{strGroupLevel}{\code{character} Value for the group level. Default: NULL and taken from \code{dfMetrics$GroupLevel} if available.}

\item{strGroupSubset}{\code{character} Subset of groups to include in the table. Default: 'red'. Options:
\itemize{
\item 'all': All groups.
\item 'red': Groups with 1+ red flags.
\item 'red/amber': Groups with 1+ red/amber flag.
\item 'amber': Groups with 1+ amber flag.
}}

\item{strGroupLabelKey}{\code{character} Value for the group label key. Default: 'InvestigatorLastName'.}

\item{bDebug}{\code{logical} Print debug messages? Default: \code{FALSE}.}
}
\description{
A widget that generates a group overview table of group-level metric results across one or more
metrics.
}
\details{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
}
\examples{
\dontrun{
strGroupLevel <- 'Site'

lWorkflows <- MakeWorkflowList()
lMetricWorkflows <- lWorkflows[ grepl('^kri', names(lWorkflows) ) ]

lDataRaw <- gsm::UseClindata(
    list(
        "dfSUBJ" = "clindata::rawplus_dm",
        "dfAE" = "clindata::rawplus_ae",
        "dfPD" = "clindata::ctms_protdev",
        "dfLB" = "clindata::rawplus_lb",
        "dfSTUDCOMP" = "clindata::rawplus_studcomp",
        "dfSDRGCOMP" = "clindata::rawplus_sdrgcomp \%>\%
            dplyr::filter(.data$phase == 'Blinded Study Drug Completion')",
        "dfDATACHG" = "clindata::edc_data_points",
        "dfDATAENT" = "clindata::edc_data_pages",
        "dfQUERY" = "clindata::edc_queries",
        "dfENROLL" = "clindata::rawplus_enroll"
    )
)

lDataMapped <- RunWorkflow(lWorkflows$data_mapping, lDataRaw)

lResults <- map(
    lMetricWorkflows,
    ~ RunWorkflow(.x, lDataMapped)
)

dfResults <- lResults \%>\% imap_dfr(~ {
    data <- .x$dfSummary
    data$MetricID <- .y
    data$GroupLevel <- strGroupLevel
    data
})

dfGroups <- bind_rows(
    "SELECT site_num as GroupID, site_status as Status, pi_first_name as InvestigatorFirstName, pi_last_name as InvestigatorLastName, city as City, state as State, country as Country, * FROM df" \%>\%
        RunQuery(clindata::ctms_site) \%>\%
        MakeLongMeta('Site'),
    "SELECT siteid as GroupID, COUNT(DISTINCT subjectid) as ParticipantCount, COUNT(DISTINCT siteid) as SiteCount FROM df GROUP BY siteid" \%>\%
        RunQuery(lData$dfEnrolled) \%>\%
        MakeLongMeta('Site')
)

dfMetrics <- lMetricWorkflows \%>\%
    map_dfr(~ .x$meta)

Widget_GroupOverview(
  dfResults,
  dfMetrics,
  dfGroups
)
}
}
