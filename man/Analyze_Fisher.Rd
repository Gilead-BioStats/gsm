% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Analyze_Fisher.R
\name{Analyze_Fisher}
\alias{Analyze_Fisher}
\title{Fisher's Exact Test Analysis.}
\usage{
Analyze_Fisher(dfTransformed, strOutcome = "Numerator")
}
\arguments{
\item{dfTransformed}{\code{data.frame} in format produced by \code{\link{Transform_Rate}}.}

\item{strOutcome}{\code{character} required, name of column in \code{dfTransformed} dataset to perform Fisher's exact test on. Default is "Numerator".}
}
\value{
\code{data.frame} with one row per site with columns: GroupID, Numerator, Numerator_Other, Denominator, Denominator_Other, Prop, Prop_Other, Metric, Estimate, and Score.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
}
\details{
Analyzes count data using the Fisher's exact test.

More information can be found in \href{https://gilead-biostats.github.io/gsm/articles/KRI\%20Method.html#the-fishers-exact-method}{The Fisher's Exact Method Section}
of the KRI Method vignette.
}
\section{Statistical Methods}{


The function \code{Analyze_Fisher} utilizes \code{stats::fisher.test} to generate an
estimate of odds ratio as well as a p-value using the Fisher’s exact test with site-level count
data. For each site, the Fisher’s exact test is conducted by comparing the given site to all other sites combined
in a 2×2 contingency table. The p-values are then used as a scoring metric in \code{{gsm}} to flag
possible outliers. The default in \code{stats::fisher.test} uses a two-sided test (equivalent to testing
the null of OR = 1) and does not compute p-values by Monte Carlo simulation unless \code{simulate.p.value = TRUE}.
Sites with p-values less than 0.05 from the Fisher’s exact test analysis are flagged by default.
The significance level was set at a common choice.
}

\section{Data Specification}{


The input data (\code{dfTransformed}) for \code{Analyze_Fisher} is typically created using \code{\link{Transform_Rate}} and should be one record per site with required columns for:
\itemize{
\item \code{GroupID} - Site ID
\item \code{Numerator} - Total number of participants at site with event of interest.
\item \code{Denominator} - Total number of participants at site/Total number of days of exposure at site.
\item \code{Metric} - Proportion of participants at site with event of interest/Rate of events at site (Numerator / Denominator).
}
}

\examples{
dfInput <- tibble::tribble(
  ~SubjectID, ~SiteID, ~StudyID, ~CountryID, ~CustomGroupID, ~Exposure, ~Count, ~Rate,
  "0496", "5", "AA-AA-000-0000", "US", "0X167", 730, 5, 5/720,
  "1350", "78", "AA-AA-000-0000", "US", "0X002", 50, 2, 2/50,
  "0539", "139", "AA-AA-000-0000", "US", "0X052", 901, 5, 5/901,
  "0329", "162", "AA-AA-000-0000", "US", "0X049", 370, 3, 3/370,
  "0429", "29", "AA-AA-000-0000", "Japan", "0X116", 450, 2, 2/450,
  "1218", "143", "AA-AA-000-0000", "US", "0X153", 170, 3, 3/170,
  "0808", "173", "AA-AA-000-0000", "US", "0X124", 680, 6, 6/680,
  "1314", "189", "AA-AA-000-0000", "US", "0X093", 815, 4, 4/815,
  "1236", "58", "AA-AA-000-0000", "China", "0X091", 225, 1, 1/225,
  "0163", "167", "AA-AA-000-0000", "US", "0X059", 360, 3, 3/360
)
dfTransformed <- Transform_Rate(
  dfInput,
  strGroupCol = "SiteID",
  strNumeratorCol = "Count",
  strDenominatorCol = "Exposure"
)
dfAnalyzed <- Analyze_Fisher(dfTransformed)

}
