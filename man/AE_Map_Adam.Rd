% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AE_Map_Adam.R
\name{AE_Map_Adam}
\alias{AE_Map_Adam}
\title{AE Assessment - ADaM Mapping}
\usage{
AE_Map_Adam(
  dfs = list(dfADSL = safetyData::adam_adsl, dfADAE = safetyData::adam_adae),
  lMapping = NULL,
  bReturnChecks = FALSE,
  bQuiet = TRUE
)
}
\arguments{
\item{bQuiet}{Default is TRUE, which means warning messages are suppressed. Set to FALSE to see warning messages.}

\item{dfADSL}{ADaM demographics data with the following required columns:  USUBJID, SITEID, TRTEDT (end date), TRTSDT (start date)}

\item{dfADAE}{ADaM AE data with the following required columns: USUBJID}

\item{mapping}{List containing expected columns in each data set. By default, mapping for dfAE is: \code{strIDCol} = "SUBJID". By default, mapping for dfRDSL is: \code{strIDCol} = "SubjectID", \code{strSiteCol} = "SiteID", and \code{strExposureCol} = "TimeOnTreatment". TODO: add more descriptive info or reference to mapping.}
}
\value{
Data frame with one record per person data frame with columns: SubjectID, SiteID, Count (Number of Adverse Events), Exposure (Time on Treatment in Days), Rate (AEs/Day)
}
\description{
Convert from ADaM format to input format for Safety Assessment.
}
\details{
This function maps from ADaM ADSL and ADAE data to the required input for \code{\link{AE_Assess}}.
}
\section{Data Specification}{


This function creates an input dataset for the Adverse Event Assessment (\code{\link{AE_Assess}}) by adding Adverse Event Counts (from \code{dfADAE}) to basic subject-level data (from \code{dfADSL}).

The following columns are required:
\itemize{
\item \code{dfADSL}
\itemize{
\item \code{USUBJID} - Unique subject ID
\item \code{SITEID} - Site ID
\item \code{TRTEDT} - Treatment End date
\item \code{TRTSDT} - Treatment Start date
}
\item \code{dfADAE}
\itemize{
\item \code{USUBJID} - Unique subject ID
}
}

Note that the function can generate data summaries for specific types of AEs by passing filtered ADAE data to dfADAE.
}

\examples{
dfInput <- AE_Map_Adam() # Run with defaults
dfInput <- AE_Map_Adam(bReturnChecks=TRUE, bQuiet=FALSE) # Run with error checking and message log

}
