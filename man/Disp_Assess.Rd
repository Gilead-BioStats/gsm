% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Disp_Assess.R
\name{Disp_Assess}
\alias{Disp_Assess}
\title{Disposition Assessment}
\usage{
Disp_Assess(
  dfInput,
  vThreshold = NULL,
  strMethod = "fisher",
  lMapping = yaml::read_yaml(system.file("mappings", "Disp_Assess.yaml", package =
    "gsm")),
  strGroup = "Site",
  bQuiet = TRUE
)
}
\arguments{
\item{dfInput}{\code{data.frame} Input data, a data frame with one record per subject.}

\item{vThreshold}{\code{numeric} Threshold specification, a vector of length 2 that defaults to
\code{c(0.01, 0.05)} for Fisher's exact test (\code{strMethod} = "fisher") and \code{c(3.491, 5.172)} for a nominal assessment (\code{strMethod = "identity"}).}

\item{strMethod}{\code{character} Statistical method. Valid values:
\itemize{
\item \code{"fisher"} (default)
\item \code{"identity"}
}}

\item{lMapping}{Column metadata with structure \code{domain$key}, where \code{key} contains the name
of the column.}

\item{strGroup}{\code{character} Grouping variable. \code{"Site"} (the default) uses the column named in \code{mapping$strSiteCol}. Other valid options using the default mapping are \code{"Study"} and \code{"CustomGroup"}.}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{list} \code{lData}, a named list with:
\itemize{
\item each data frame in the data pipeline
\itemize{
\item \code{dfTransformed}, returned by \code{\link[=Transform_Rate]{Transform_Rate()}}
\item \code{dfAnalyzed}, returned by \code{\link[=Analyze_Fisher]{Analyze_Fisher()}} or \code{\link[=Analyze_Identity]{Analyze_Identity()}}
\item \code{dfFlagged}, returned by \code{\link[=Flag]{Flag()}} or \code{\link[=Flag_Fisher]{Flag_Fisher()}}
\item \code{dfSummary}, returned by \code{\link[=Summarize]{Summarize()}}
}
\item \code{list} \code{lCharts}, a named list with:
\itemize{
\item \code{scatter}, a ggplot2 object returned by \code{\link[=Visualize_Scatter]{Visualize_Scatter()}}
\item \code{barMetric}, a ggplot2 object returned by \code{\link[=Visualize_Score]{Visualize_Score()}} using strType == "metric"
\item \code{barScore}, a ggplot2 object returned by \code{\link[=Visualize_Score]{Visualize_Score()}} using strType == "score"
}
\item \code{list} \code{lChecks}, a named list with:
\itemize{
\item \code{dfInput}, a named list returned by \code{\link[=is_mapping_valid]{is_mapping_valid()}}
\item \code{status}, a boolean returned by \code{\link[=is_mapping_valid]{is_mapping_valid()}}
\item \code{mapping}, a named list that is provided as an argument to the \code{lMapping} parameter in \code{\link[=Disp_Assess]{Disp_Assess()}}
\item \code{spec}, a named list used to define variable specifications
}
}
}
\description{
Evaluates disposition rate (DISP) on mapped subject-level dataset to identify sites that may be over- or under-reporting patient discontinuations.
}
\details{
The Disposition Assessment uses the standard \href{https://silver-potato-cfe8c2fb.pages.github.io/articles/DataPipeline.html}{GSM data pipeline} to flag possible outliers. Additional details regarding the data pipeline and statistical
methods are described below.
}
\section{Data specification}{
\tabular{lllll}{
   \strong{Domain} \tab \strong{Column Key} \tab \strong{Default Value} \tab \strong{Required?} \tab \strong{Require Unique Values?} \cr
   dfInput \tab strIDCol \tab SubjectID \tab TRUE \tab TRUE \cr
   dfInput \tab strCountCol \tab Count \tab TRUE \tab FALSE \cr
   dfInput \tab strGroupCol \tab  \tab TRUE \tab FALSE \cr
}
}

\section{Statistical assumptions}{
The Fisher’s exact test, or percentage value (identity) is used to
generate estimates and p-values for each site (as specified with the
\code{strMethod} parameter). Those outputs are then used to flag possible
outliers using the thresholds specified in \code{vThreshold}. In the Fisher’s
exact test, sites with \emph{p} < 0.05 are flagged as 1 by default.

See \code{\link[=Analyze_Fisher]{Analyze_Fisher()}} or
\code{\link[=Analyze_Identity]{Analyze_Identity()}} for additional
details about the statistical methods and their assumptions.
}

\examples{
dfInput <- Disp_Map_Raw()
disp_assessment_fisher <- Disp_Assess(dfInput, strMethod = "fisher")
disp_assessment_identity <- Disp_Assess(dfInput, strMethod = "identity")

}
