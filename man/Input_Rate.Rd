% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Input_Rate.R
\name{Input_Rate}
\alias{Input_Rate}
\title{Input_Rate}
\usage{
Input_Rate(
  dfSubjects,
  dfNumerator,
  dfDenominator,
  strGroupCol = "GroupID",
  strGroupLevel = strGroupCol,
  strSubjectCol = "SubjectID",
  strNumeratorMethod = c("Count", "Sum"),
  strDenominatorMethod = c("Count", "Sum"),
  strNumeratorCol = NULL,
  strDenominatorCol = NULL,
  strFilterSubjects = NULL,
  strFilterNumerator = NULL,
  strFilterDenominator = NULL
)
}
\arguments{
\item{dfSubjects}{\code{data.frame} with columns for SubjectID and any other
relevant subject information}

\item{dfNumerator}{\code{data.frame} with a column for SubjectID and
\code{strNumeratorCol} if \code{strNumeratorMethod} is "Sum"}

\item{dfDenominator}{\code{data.frame} with a column for SubjectID and
\code{strDenominatorCol} if \code{strDenominatorMethod} is "Sum"}

\item{strGroupCol}{\code{character} Column name in \code{dfSubjects} to use for
grouping. Default: "GroupID"}

\item{strGroupLevel}{\code{character} value for the group level. Default:
\code{strGroupCol}}

\item{strSubjectCol}{\code{character} Column name in \code{dfSubjects} to use for
subject ID. Default: "SubjectID"}

\item{strNumeratorMethod}{\code{character} Method to calculate numerator. Default:
"Count"}

\item{strDenominatorMethod}{\code{character} Method to calculate denominator.
Default: "Count"}

\item{strNumeratorCol}{\code{character} Column name in \code{dfNumerator} to use for
numerator calculation. Default: NULL}

\item{strDenominatorCol}{\code{character} Column name in \code{dfDenominator} to use
for denominator calculation. Default: NULL}

\item{strFilterSubjects, strFilterNumerator, strFilterDenominator}{\code{character}
A string with filters for \code{dfSubjects}, \code{dfNumerator}, or \code{dfDenominator},
or a character vector of such filters. For example, if \code{dfSubjects}
contains a column \code{enrollyn} with values 'Y' and 'N', and a column \code{siteid}
with integer IDs, \code{strFilterSubjects} might be "enrollyn == 'y', siteid ==
5", or \code{c("enrollyn == 'y'", "siteid == 5")}. Default: NULL}
}
\value{
\code{data.frame} with the following specification:

| Column Name  | Description                          | Type     |
|--------------|--------------------------------------|----------| |
SubjectID    | The subject ID                       | Character| | GroupID
| The group ID                         | Character| | GroupLevel   | The
group type                       | Character| | Numerator    | The
calculated numerator value       | Numeric  | | Denominator  | The
calculated denominator value     | Numeric  | | Metric       | The
calculated input rate/metric     | Numeric  |
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Calculate a subject level rate from numerator and denominator data

This function takes in a list of data frames including dfSUBJ, dfNumerator, and dfDenominator,
and calculates a subject level rate based on the specified numerator and denominator methods (either
"Count" or "Sum"). If the method is "Count", the function simply counts the number of rows in the
provided data frame. If the numerator method is "Sum", the function takes the sum of the values in
the specified column (strNumeratorCol or strDenominatorCol). The function returns a data frame with
the calculated input rate for each subject.

The data requirements for the function are as follows:
\itemize{
\item dfSubjects: A data frame with columns for SubjectID and any other relevant subject information
\item dfNumerator: A data frame with a column for SubjectID and \code{strNumeratorCol} if \code{strNumeratorMethod} is "Sum"
\item dfDenominator: A data frame with a column for SubjectID and \code{strDenominatorCol} if \code{strDenominatorMethod} is "Sum"
}

All other columns are dropped from the output data frame. Note that if no values for a subject are
found in dfNumerator/dfDenominator numerator and denominator values are filled with 0 in the output data frame.
}
\examples{
# Run for AE KRI
dfInput <- Input_Rate(
  dfSubjects = clindata::rawplus_dm,
  dfNumerator = clindata::rawplus_ae,
  dfDenominator = clindata::rawplus_dm,
  strSubjectCol = "subjid",
  strGroupCol = "siteid",
  strGroupLevel = "Site",
  strNumeratorMethod = "Count",
  strDenominatorMethod = "Sum",
  strDenominatorCol = "timeontreatment"
)

}
\keyword{internal}
