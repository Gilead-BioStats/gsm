% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/barChart.R
\name{barChart}
\alias{barChart}
\title{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}}
\usage{
barChart(
  results = NULL,
  workflow = list(),
  threshold = NULL,
  yaxis = "score",
  selectedGroupIDs = NULL,
  addSiteSelect = TRUE,
  width = NULL,
  height = NULL,
  elementId = NULL
)
}
\arguments{
\item{results}{data with column names:
\itemize{
\item{\code{studyid}}
\item{\code{workflowid}}
\item{\code{groupid}}
\item{\code{numerator}}
\item{\code{denominator}}
\item{\code{metric}}
\item{\code{score}}
\item{\code{flag}}
}}

\item{workflow}{configuration data with columns:
\itemize{
\item{\code{workflow}}
\item{\code{gsm_version}}
\item{\code{group}}
\item{\code{metric}}
\item{\code{numerator}}
\item{\code{denominator}}
\item{\code{outcome}}
\item{\code{model}}
\item{\code{score}}
\item{\code{data_inputs}}
\item{\code{data_filters}}
}}

\item{threshold}{a one row data frame containing columns:
\itemize{
\item{\code{workflowid}}
\item{\code{gsm_version}}
\item{\code{param}}
\item{\code{index}}
\item{\code{default}}
\item{\code{configurable}}
}}

\item{yaxis}{either \code{'score'} or \code{'metric'}}

\item{selectedGroupIDs}{group IDs to highlight, \code{NULL} by default, can be a single site or a vector.}

\item{addSiteSelect}{add a dropdown to highlight sites?}

\item{width}{width of widget, full screen by default}

\item{height}{height of widget, calculated based on width}

\item{elementId}{ID of container HTML element}
}
\description{
A widget that displays a group-level bar chart based on the output of a KRI analysis.
Bar charts are provided by default in any Assess function, and are suffixed with "JS" to indicate that they are an \code{htmlwidget} ported from the \code{rbm-viz} JavaScript library.
}
\details{
KRI Bar Chart
}
\examples{

ae <- AE_Map_Raw()

ae_transform <- Transform_Rate(
  dfInput = ae,
  strGroupCol = "SiteID",
  strNumeratorCol = "Count",
  strDenominatorCol = "Exposure"
)

ae_analyze <- Analyze_NormalApprox(
  dfTransformed = ae_transform,
  strType = "rate"
)

ae_flag <- Flag_NormalApprox(
  ae_analyze,
  vThreshold = c(-3, -2, 2, 3)
)

ae_summary <- Summarize(
  ae_flag
)

dfConfig <- MakeDfConfig(
  strMethod = "NormalApprox",
  strGroup = "Site",
  strAbbreviation = "AE",
  strMetric = "Adverse Event Rate",
  strNumerator = "Adverse Events",
  strDenominator = "Days on Treatment",
  vThreshold = c(-3, -2, 2, 3)
)

plot <- barChart(
  results = ae_summary,
  workflow = dfConfig,
  yaxis = "metric",
  elementId = "aeAssessMetric"
)

}
