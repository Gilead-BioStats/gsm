% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Consent_Assess.R
\name{Consent_Assess}
\alias{Consent_Assess}
\title{Consent Assessment}
\usage{
Consent_Assess(
  dfInput,
  nThreshold = 0.5,
  lMapping = yaml::read_yaml(system.file("mappings", "Consent_Assess.yaml", package =
    "gsm")),
  strGroup = "Site",
  nMinDenominator = NULL,
  bMakeCharts = FALSE,
  bQuiet = TRUE
)
}
\arguments{
\item{dfInput}{\code{data.frame} Input data, a data frame with one record per subject.}

\item{nThreshold}{\code{numeric} Threshold specification. Default: \code{0.5}}

\item{lMapping}{\code{list} Column metadata with structure \code{domain$key}, where \code{key} contains the name
of the column. Default: package-defined Consent Assessment mapping.}

\item{strGroup}{\code{character} Grouping variable. \code{"Site"} (the default) uses the column named in \code{mapping$strSiteCol}. Other valid options using the default mapping are \code{"Study"}, \code{"Country"}, and \code{"CustomGroup"}.}

\item{nMinDenominator}{\code{numeric} Specifies the minimum denominator required to return a \code{score} and calculate a \code{flag}. Default: NULL}

\item{bMakeCharts}{\code{logical} Boolean value indicating whether to create charts.}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{list} \code{lData}, a named list with:
\itemize{
\item each data frame in the data pipeline
\itemize{
\item \code{dfTransformed}, returned by \code{\link[=Transform_Count]{Transform_Count()}}
\item \code{dfAnalyzed}, returned by \code{\link[=Analyze_Identity]{Analyze_Identity()}}
\item \code{dfFlagged}, returned by \code{\link[=Flag]{Flag()}}
\item \code{dfSummary}, returned by \code{\link[=Summarize]{Summarize()}}
}
\item \code{list} \code{lCharts}, a named list with:
\itemize{
\item \code{barMetric}, a ggplot2 object returned by \code{\link[=Visualize_Score]{Visualize_Score()}} using strType == "metric"
\item \code{barScore}, a ggplot2 object returned by \code{\link[=Visualize_Score]{Visualize_Score()}} using strType == "score"
}
\item \code{list} \code{lChecks}, a named list with:
\itemize{
\item \code{dfInput}, a named list returned by \code{\link[=is_mapping_valid]{is_mapping_valid()}}
\item \code{status}, a boolean returned by \code{\link[=is_mapping_valid]{is_mapping_valid()}}
\item \code{mapping}, a named list that is provided as an argument to the \code{lMapping} parameter in \code{\link[=Consent_Assess]{Consent_Assess()}}
\item \code{spec}, a named list used to define variable specifications
}
}
}
\description{
Evaluates sites where subject consent was:
\itemize{
\item not given
\item never obtained
\item not followed by subject randomization
\item obtained after subject randomization
}
}
\details{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

The Consent Assessment uses the standard \href{https://gilead-biostats.github.io/gsm/articles/DataPipeline.html}{GSM data pipeline} to flag sites with consent issues. Additional details regarding the data pipeline and statistical methods are described below.
}
\section{Data specification}{
\tabular{lllll}{
   \strong{Domain} \tab \strong{Column Key} \tab \strong{Default Value} \tab \strong{Required?} \tab \strong{Require Unique Values?} \cr
   dfInput \tab strIDCol \tab SubjectID \tab TRUE \tab TRUE \cr
   dfInput \tab strCountCol \tab Count \tab TRUE \tab FALSE \cr
   dfInput \tab strGroupCol \tab SiteID \tab TRUE \tab FALSE \cr
}
}

\examples{
dfInput <- Consent_Map_Raw()
consent_assessment <- Consent_Assess(dfInput)

}
