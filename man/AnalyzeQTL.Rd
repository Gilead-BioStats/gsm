% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AnalyzeQTL.R
\name{AnalyzeQTL}
\alias{AnalyzeQTL}
\title{QTL Analysis}
\usage{
AnalyzeQTL(
  dfTransformed,
  conf.level = 0.95,
  strOutcome = "binary",
  bQuiet = TRUE
)
}
\arguments{
\item{dfTransformed}{\code{data.frame} in format produced by \code{\link{Transform_Rate}}}

\item{conf.level}{\code{numeric} specified confidence interval for QTL analysis.}

\item{strOutcome}{\code{character} indicates statistical test used for QTL analysis. One of \code{rate} or \code{binary}.}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{data.frame} with one row with columns: GroupID, N, Numerator, Denominator, Metric, Method, ConfLevel, Estimate, LowCI, UpCI.
}
\description{
QTL Analysis
}
\details{
Creates QTL Analysis results data for binary event (e.g. Yes/No) of interest either as a proportion or as a rate

Creates confidence intervals for the observed proportion of participants with event of interest using the exact binomial or poisson test
}
\section{Statistical Methods}{


TODO Coming soon ...
}

\section{Data Specification}{


The input data (\code{dfTransformed}) for AnalyzeQTL_Binary is typically created using \code{\link{Transform_Rate}} and should be one record for the entire study with required columns for:
\itemize{
\item \code{GroupID} - GroupID should be the StudyID
\item \code{N} - Total number of participants at site
\item \code{Numerator} - Total number of participants at site with event of interest
\item \code{Denominator} - Total number of participants at a site
\item \code{Metric} - Proportion of participants at site with event of interest
}
}

\examples{
dfInput <- Disp_Map_Raw()
dfTransformed <- Transform_Rate(dfInput, strNumeratorCol = "Count",
                                         strDenominatorCol = "Total",
                                         strGroupCol = "StudyID"
                                         )

dfAnalyzed <- AnalyzeQTL(dfTransformed, strOutcome = "binary")
dfFlagged <- Flag( dfAnalyzed, strColumn = "LowCI", vThreshold = c(NA, 0.2) )



dfInput <- AE_Map_Raw() \%>\% na.omit()
dfTransformed <- Transform_Rate(dfInput,
                                strGroupCol = "StudyID",
                                strNumeratorCol = "Count",
                                strDenominatorCol = "Exposure"
                                )

dfAnalyzed <- AnalyzeQTL(dfTransformed , strOutcome = "rate")
dfFlagged <- Flag( dfAnalyzed, strColumn = "LowCI", vThreshold = c(NA, 0.01) )

}
