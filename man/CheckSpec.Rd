% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util-checkSpec.R
\name{CheckSpec}
\alias{CheckSpec}
\title{Check if the data and spec are compatible}
\usage{
CheckSpec(lData, lSpec)
}
\arguments{
\item{lData}{A list of data.frames.}

\item{lSpec}{A list specifying the expected structure of the data.}
}
\value{
This function does not return any value. It either prints a message indicating
that all data.frames and columns in the spec are present in the data, or throws an error
if any data.frame or column is missing.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Check if the data and spec are compatible by comparing the data.frames and
columns in the spec with the data.
}
\examples{
lData <- list(reporting_bounds = gsm::reportingBounds, reporting_results = gsm::reportingResults)
lSpec <- list(
  reporting_bounds = list(
    Metric = list(type = "numeric"),
    Numerator = list(type = "numeric"),
    LogDenominator = list(type = "numeric"),
    MetricID = list(type = "character")
  ),
  reporting_results = list(
    GroupID = list(type = "character"),
    GroupLevel = list(type = "character"),
    Numerator = list(type = "integer"),
    Denominator = list(type = "integer")
  )
)
CheckSpec(lData, lSpec) # Prints message that everything is found

\dontrun{
lSpec$reporting_groups$NotACol <- list(type = "character")
CheckSpec(lData, lSpec) # Throws error that NotACol is missing
}
}
