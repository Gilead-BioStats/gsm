% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LB_Map_Raw.R
\name{LB_Map_Raw}
\alias{LB_Map_Raw}
\title{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}}
\usage{
LB_Map_Raw(
  dfs = list(dfSUBJ = clindata::rawplus_dm, dfLB = clindata::rawplus_lb),
  lMapping = gsm::Read_Mapping("rawplus"),
  bReturnChecks = FALSE,
  bQuiet = TRUE
)
}
\arguments{
\item{dfs}{\code{list} Input data frames:
\itemize{
\item \code{dfLB}: \code{data.frame} Lab data with one record subject per visit per lab result. Default: \code{clindata::rawplus_lb}
\item \code{dfSUBJ}: \code{data.frame} Subject-level data with one record per subject. Default: \code{clindata::rawplus_dm}
}}

\item{lMapping}{\code{list} Column metadata with structure \code{domain$key}, where \code{key} contains the name
of the column. Default: package-defined mapping for raw+.}

\item{bReturnChecks}{\code{logical} Return input checks from \code{\link[=is_mapping_valid]{is_mapping_valid()}}? Default: \code{FALSE}}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{data.frame} Data frame with one record per subject, the input to \code{\link[=LB_Assess]{LB_Assess()}}. If
\code{bReturnChecks} is \code{TRUE} \code{LB_Map_Raw} returns a named \code{list} with:
\itemize{
\item \code{df}: the data frame described above
\item \code{lChecks}: a named \code{list} of check results
}
}
\description{
Convert from ADaM or raw format to input format for Lab Abnormality Assessment.
}
\details{
Lab Abnormality Assessment - Raw Mapping

Convert raw lab data (LB), typically processed case report form data, to formatted
input data to \code{\link[=LB_Assess]{LB_Assess()}}.

\code{LB_Map_Raw} combines LB data with subject-level data to create formatted input data to
\code{\link[=LB_Assess]{LB_Assess()}}. This function creates an input dataset for the LB Assessment
(\code{\link[=LB_Assess]{LB_Assess()}}) by binding subject-level abnormal LB counts (derived from \code{dfLB}) to
subject-level data (from \code{dfSUBJ}). Note that the function can generate data summaries for
specific types of LB criteria by passing filtered LB data to \code{dfLB}.
}
\examples{
# Run with defaults.
dfInput <- LB_Map_Raw()

# Run with error checking and message log.
dfInput <- LB_Map_Raw(bReturnChecks = TRUE, bQuiet = FALSE)

}
