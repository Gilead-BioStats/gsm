% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Disp_Map_Raw.R
\name{Disp_Map_Raw}
\alias{Disp_Map_Raw}
\title{Disposition Assessment - Raw Mapping}
\usage{
Disp_Map_Raw(
  dfs = list(dfDISP = clindata::rawplus_subj, dfSUBJ = clindata::rawplus_subj),
  strContext = "Treatment",
  lMapping = yaml::read_yaml(system.file("mappings", "mapping_rawplus.yaml", package =
    "gsm")),
  bReturnChecks = FALSE,
  bQuiet = TRUE
)
}
\arguments{
\item{dfs}{\code{list} Input data frame:
\itemize{
\item \code{dfDISP}: \code{data.frame} Subject-level data with one record per discontinuation reason.
\item \code{dfSUBJ}: \code{data.frame} Subject-level data with one record per participant.
}}

\item{strContext}{Disposition Context - "Treatment" or "Study"}

\item{lMapping}{\code{list} Column metadata with structure \code{domain$key}, where \code{key} contains the name
of the column.}

\item{bReturnChecks}{\code{logical} Return input checks from \code{\link[=is_mapping_valid]{is_mapping_valid()}}? Default: \code{FALSE}}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{data.frame} with one record per subject, the input to gsm::Disp_Assess(). If
\code{bReturnChecks} is \code{TRUE} \code{AE_Map_Raw} returns a named \code{list} with:
\itemize{
\item \code{df}: the data frame described above
\item \code{lChecks}: a named \code{list} of check results
}
}
\description{
Convert raw disposition data to formatted input data to to formatted
input data to \code{\link[=Disp_Assess]{Disp_Assess()}}.
}
\details{
Convert from ADaM or raw format to input format for Disposition Assessment.

\code{Disp_Map_Raw} creates an input dataset for the Disposition Assessment (link to code) by adding Discontinuation Reason Counts to basic subject-level data.
}
\section{Data specification}{
\if{html}{\out{
<table style="width:100%;">
<colgroup>
<col width="8%" />
<col width="26%" />
<col width="13%" />
<col width="10%" />
<col width="20%" />
<col width="19%" />
</colgroup>
<thead>
<tr class="header">
<th align="left"><strong>Domain</strong></th>
<th align="left"><strong>Column Key</strong></th>
<th align="left"><strong>Default Value</strong></th>
<th align="left"><strong>Required?</strong></th>
<th align="left"><strong>Accept NA/Empty Values?</strong></th>
<th align="left"><strong>Require Unique Values?</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">dfSUBJ</td>
<td align="left">strIDCol</td>
<td align="left">SubjectID</td>
<td align="left">TRUE</td>
<td align="left">FALSE</td>
<td align="left">TRUE</td>
</tr>
<tr class="even">
<td align="left">dfSUBJ</td>
<td align="left">strSiteCol</td>
<td align="left">SiteID</td>
<td align="left">TRUE</td>
<td align="left">FALSE</td>
<td align="left">FALSE</td>
</tr>
<tr class="odd">
<td align="left">dfDISP</td>
<td align="left">strIDCol</td>
<td align="left">SubjectID</td>
<td align="left">TRUE</td>
<td align="left">FALSE</td>
<td align="left">FALSE</td>
</tr>
<tr class="even">
<td align="left">dfDISP</td>
<td align="left">strStudyDiscontinuationReasonCol</td>
<td align="left">StudDCReason</td>
<td align="left">TRUE</td>
<td align="left">TRUE</td>
<td align="left">FALSE</td>
</tr>
<tr class="odd">
<td align="left">dfDISP</td>
<td align="left">strStudyCompletionFlagCol</td>
<td align="left">StudCompletion</td>
<td align="left">TRUE</td>
<td align="left">TRUE</td>
<td align="left">FALSE</td>
</tr>
<tr class="even">
<td align="left">dfDISP</td>
<td align="left">strTreatmentDiscontinuationReasonCol</td>
<td align="left">TrtDCReason</td>
<td align="left">TRUE</td>
<td align="left">TRUE</td>
<td align="left">FALSE</td>
</tr>
<tr class="odd">
<td align="left">dfDISP</td>
<td align="left">strTreatmentCompletionFlagCol</td>
<td align="left">TrtCompletion</td>
<td align="left">TRUE</td>
<td align="left">TRUE</td>
<td align="left">FALSE</td>
</tr>
</tbody>
</table>
}}
}

\examples{
df <- Disp_Map_Raw()

}
