% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Disp_Map_Raw.R
\name{Disp_Map_Raw}
\alias{Disp_Map_Raw}
\title{Disposition Assessment - Raw Mapping}
\usage{
Disp_Map_Raw(
  dfs = list(dfDISP = safetyData::adam_adsl),
  strReason = "any",
  lMapping = yaml::read_yaml(system.file("mappings", "mapping_rawplus.yaml", package =
    "gsm")),
  bReturnChecks = FALSE,
  bQuiet = TRUE
)
}
\arguments{
\item{dfs}{\code{list} Input data frame:
\itemize{
\item \code{dfDISP}: \code{data.frame} Subject-level data with one record per discontinuation reason.
}}

\item{strReason}{\code{character} Case-insensitive string value to describe the discontinuation reason, e.g., "adverse event".}

\item{lMapping}{\code{list} Column metadata with structure \code{domain$key}, where \code{key} contains the name
of the column.}

\item{bReturnChecks}{\code{logical} Return input checks from \code{\link[=is_mapping_valid]{is_mapping_valid()}}? Default: \code{FALSE}}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{data.frame} with one record per subject, the input to gsm::Disp_Assess(). If
\code{bReturnChecks} is \code{TRUE} \code{AE_Map_Raw} returns a named \code{list} with:
\itemize{
\item \code{df}: the data frame described above
\item \code{lChecks}: a named \code{list} of check results
}
}
\description{
Convert raw disposition data to formatted input data to #TODO: Disp_Assess()

\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\details{
Convert from ADaM or raw format to input format for Disposition Assessment.

\code{Disp_Map_Raw} creates an input dataset for the Disposition Assessment (link to code) by adding Discontinuation Reason Counts to basic subject-level data.
}
\section{Data specification}{
\tabular{lllll}{
   \strong{Domain} \tab \strong{Column Key} \tab \strong{Default Value} \tab \strong{Required?} \tab \strong{Accept NA/Empty Values?} \cr
   dfDISP \tab strIDCol \tab SUBJID \tab TRUE \tab FALSE \cr
   dfDISP \tab strSiteCol \tab SITEID \tab TRUE \tab FALSE \cr
   dfDISP \tab strDCCol \tab DCREASCD \tab TRUE \tab TRUE \cr
}
}

\examples{
df <- Disp_Map_Raw(strReason = "adverse event")

}
