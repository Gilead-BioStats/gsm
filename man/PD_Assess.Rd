% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PD_Assess.R
\name{PD_Assess}
\alias{PD_Assess}
\title{Protocol Deviation Assessment}
\usage{
PD_Assess(
  dfInput,
  vThreshold = NULL,
  strMethod = "poisson",
  strKRILabel = "PDs/Week",
  strGroupCol = "SiteID",
  lTags = list(Assessment = "PD"),
  bChart = TRUE,
  bReturnChecks = FALSE,
  bQuiet = TRUE
)
}
\arguments{
\item{dfInput}{\code{data.frame} Input data, a data frame with one record per subject.}

\item{vThreshold}{\code{numeric} Threshold specification, a vector of length 2 that defaults to
\code{c(-5, 5)} for a Poisson model (\code{strMethod = "poisson"}), \code{c(.0001, NA)} for a Wilcoxon
signed-rank test (\code{strMethod} = "wilcoxon"), and \code{c(0.000895, 0.003059)} for a nominal assessment (\code{strMethod = "identity"}).}

\item{strMethod}{\code{character} Statistical method. Valid values:
\itemize{
\item \code{"poisson"} (default)
\item \code{"wilcoxon"}
\item \code{"identity"}
}}

\item{strKRILabel}{\code{character} KRI description. Default: \code{"PDs/Week"}}

\item{strGroupCol}{\code{character} Name of column for grouping variable. Default: \code{"SiteID"}}

\item{lTags}{\code{list} Assessment tags, a named list of tags describing the assessment that defaults
to \code{list(Assessment = "PD")}. \code{lTags} is returned as part of the assessment (\code{lAssess$lTags})
and each tag is added as a column in \code{lAssess$dfSummary}.}

\item{bChart}{\code{logical} Generate data visualization? Default: \code{TRUE}}

\item{bReturnChecks}{\code{logical} Return input checks from \code{\link[=is_mapping_valid]{is_mapping_valid()}}? Default: \code{FALSE}}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{list} Assessment, a named list with:
\itemize{
\item each data frame in the data pipeline
\itemize{
\item \code{dfInput}
\item \code{dfTransformed}, returned by \code{\link[=Transform_EventCount]{Transform_EventCount()}}
\item \code{dfAnalyzed}, returned by \code{\link[=Analyze_Poisson]{Analyze_Poisson()}} or \code{\link[=Analyze_Wilcoxon]{Analyze_Wilcoxon()}}
\item \code{dfFlagged}, returned by \code{\link[=Flag]{Flag()}}
\item \code{dfSummary}, returned by \code{\link[=Summarize]{Summarize()}}
}
\item assessment metadata
\itemize{
\item \code{strFunctionName}
\item \code{lParams}
\item \code{lTags}
}
\item output(s)
\itemize{
\item \code{chart}
}
}
}
\description{
Evaluates protocol deviation (PD) rates to identify sites that may be over- or under-reporting PDs.
}
\details{
The PD Assessment uses the standard \href{https://silver-potato-cfe8c2fb.pages.github.io/articles/DataPipeline.html}{GSM data pipeline} to flag possible outliers. Additional details regarding the data pipeline and statistical
methods are described below.
}
\section{Data specification}{
\tabular{lllll}{
   \strong{Domain} \tab \strong{Column Key} \tab \strong{Default Value} \tab \strong{Required?} \tab \strong{Require Unique Values?} \cr
   dfInput \tab strIDCol \tab SubjectID \tab TRUE \tab TRUE \cr
   dfInput \tab strCountCol \tab Count \tab TRUE \tab FALSE \cr
   dfInput \tab strExposureCol \tab Exposure \tab TRUE \tab FALSE \cr
   dfInput \tab strRateCol \tab Rate \tab TRUE \tab FALSE \cr
   dfInput \tab strGroupCol \tab  \tab TRUE \tab FALSE \cr
}
}

\section{Statistical assumptions}{
A Poisson or Wilcoxon model is used to generate estimates and p-values for each site (as specified with the \code{strMethod} parameter). Those model outputs are then used to flag possible outliers using the thresholds specified in \code{vThreshold}. In the Poisson model, sites with an estimate less than -5 are flagged as -1 and greater than 5 are flagged as 1 by default. For Wilcoxon, sites with p-values less than 0.0001 are flagged by default.

See \code{\link[=Analyze_Poisson]{Analyze_Poisson()}} and \code{\link[=Analyze_Wilcoxon]{Analyze_Wilcoxon()}} for additional details about the statistical methods and their assumptions.
}

\examples{
dfInput <- PD_Map_Raw()
pd_assessment_poisson <- PD_Assess(dfInput)
pd_assessment_wilcoxon <- PD_Assess(dfInput, strMethod = "wilcoxon")

}
