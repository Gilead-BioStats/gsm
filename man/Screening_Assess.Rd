% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Screening_Assess.R
\name{Screening_Assess}
\alias{Screening_Assess}
\title{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}}
\usage{
Screening_Assess(
  dfInput,
  vThreshold = NULL,
  strMethod = "NormalApprox",
  lMapping = yaml::read_yaml(system.file("mappings", "Screening_Assess.yaml", package =
    "gsm")),
  strGroup = "Site",
  nMinDenominator = NULL,
  nConfLevel = NULL,
  bQuiet = TRUE
)
}
\arguments{
\item{dfInput}{\code{data.frame} Input data, a data frame with one record per subject.}

\item{vThreshold}{\code{numeric} Threshold specification, a vector of length 2 or 4 that defaults to \code{c(-3, -2, 2, 3)} for a Normal Approximation (\code{strMethod = "NormalApprox"}),
\code{c(0.01, 0.05)} for Fisher's exact test (\code{strMethod = "Fisher"}), and \code{c(3.491, 5.172)} for a nominal assessment (\code{strMethod = "Identity"}).}

\item{strMethod}{\code{character} Statistical method. Valid values:
\itemize{
\item \code{"NormalApprox"} (default)
\item \code{"Fisher"}
\item \code{"Identity"}
}}

\item{lMapping}{\code{list} Column metadata with structure \code{domain$key}, where \code{key} contains the name
of the column. Default: package-defined Screening Assessment mapping.}

\item{strGroup}{\code{character} Grouping variable. \code{"Site"} (the default) uses the column named in \code{mapping$strSiteCol}. Other valid options using the default mapping are \code{"Study"}, \code{"Country"}, and \code{"CustomGroup"}.}

\item{nMinDenominator}{\code{numeric} Specifies the minimum denominator required to return a \code{score} and calculate a \code{flag}. Default: NULL}

\item{nConfLevel}{\code{numeric} Confidence level for QTL analysis.}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{list} \code{lData}, a named list with:
\itemize{
\item each data frame in the data pipeline
\itemize{
\item \code{dfTransformed}, returned by \code{\link[=Transform_Rate]{Transform_Rate()}}
\item \code{dfAnalyzed}, returned by \code{\link[=Analyze_NormalApprox]{Analyze_NormalApprox()}}, \code{\link[=Analyze_Fisher]{Analyze_Fisher()}}, or \code{\link[=Analyze_Identity]{Analyze_Identity()}}
\item \code{dfFlagged}, returned by \code{\link[=Flag_NormalApprox]{Flag_NormalApprox()}}, \code{\link[=Flag_Fisher]{Flag_Fisher()}}, or \code{\link[=Flag]{Flag()}}
\item \code{dfSummary}, returned by \code{\link[=Summarize]{Summarize()}}
}
\item \code{list} \code{lCharts}, a named list with:
\itemize{
\item \code{scatter}, a ggplot2 object returned by \code{\link[=Visualize_Scatter]{Visualize_Scatter()}}
\item \code{barMetric}, a ggplot2 object returned by \code{\link[=Visualize_Score]{Visualize_Score()}} using strType == "metric"
\item \code{barScore}, a ggplot2 object returned by \code{\link[=Visualize_Score]{Visualize_Score()}} using strType == "score"
\item \code{dfBounds}, returned by \code{\link[=Analyze_NormalApprox_PredictBounds]{Analyze_NormalApprox_PredictBounds()}} when \code{strMethod == "NormalApprox"}
}
\item \code{list} \code{lChecks}, a named list with:
\itemize{
\item \code{dfInput}, a named list returned by \code{\link[=is_mapping_valid]{is_mapping_valid()}}
\item \code{status}, a boolean returned by \code{\link[=is_mapping_valid]{is_mapping_valid()}}
\item \code{mapping}, a named list that is provided as an argument to the \code{lMapping} parameter in \code{\link[=Screening_Assess]{Screening_Assess()}}
\item \code{spec}, a named list used to define variable specifications
}
}
}
\description{
Evaluates screen failure (SF) rate on a mapped subject-level dataset to identify sites that may be over- or under-reporting screen failures.
}
\details{
Screen Failure Assessment

The Screen Failure Assessment uses the standard \href{https://silver-potato-cfe8c2fb.pages.github.io/articles/DataPipeline.html}{GSM data pipeline} to flag possible outliers. Additional details regarding the data pipeline and statistical
methods are described below.
}
\examples{
dfInput <- Screening_Map_Raw()
Screening_assessment_NormalApprox <- Screening_Assess(dfInput, strMethod = "NormalApprox")
Screening_assessment_fisher <- Screening_Assess(dfInput, strMethod = "Fisher")
Screening_assessment_identity <- Screening_Assess(dfInput, strMethod = "Identity")

}
