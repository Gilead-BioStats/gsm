% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PD_Map_Raw_binary.R
\name{PD_Map_Raw_binary}
\alias{PD_Map_Raw_binary}
\title{Protocol Deviation Assessment - Raw Mapping}
\usage{
PD_Map_Raw_binary(
  dfs = list(dfSUBJ = clindata::rawplus_dm, dfPD = clindata::rawplus_protdev),
  lMapping = yaml::read_yaml(system.file("mappings", "mapping_rawplus.yaml", package =
    "gsm")),
  bReturnChecks = FALSE,
  bQuiet = TRUE
)
}
\arguments{
\item{dfs}{\code{list} Input data frames:
\itemize{
\item \code{dfPD}: \code{data.frame} Event-level data with one record per PD.
\item \code{dfSUBJ}: \code{data.frame} Subject-level data with one record per subject.
}}

\item{lMapping}{\code{list} Column metadata with structure \code{domain$key}, where \code{key} contains the name
of the column. Default: package-defined mapping for raw+.}

\item{bReturnChecks}{\code{logical} Return input checks from \code{\link[=is_mapping_valid]{is_mapping_valid()}}? Default: \code{FALSE}}

\item{bQuiet}{\code{logical} Suppress warning messages? Default: \code{TRUE}}
}
\value{
\code{data.frame} Data frame with one record per subject, the input to \code{\link[=PD_Assess]{PD_Assess()}}. If
\code{bReturnChecks} is \code{TRUE} \code{PD_Map_Raw} returns a named \code{list} with:
\itemize{
\item \code{df}: the data frame described above
\item \code{lChecks}: a named \code{list} of check results
}
}
\description{
Convert raw protocol deviation (PD) data, typically processed case report form data, to formatted
input data to \code{\link[=PD_Assess]{PD_Assess()}}.
}
\details{
\code{PD_Map_Raw_binary} combines PD data with subject-level study duration data to create formatted
input data to \code{\link[=PD_Assess]{PD_Assess()}}. This function creates an input dataset for the PD Assessment
(\code{\link[=PD_Assess]{PD_Assess()}}) by binding subject-level PD counts (derived from \code{dfPD}) to subject-level
data (from \code{dfSUBJ}). Note that the function can generate data summaries for specific types of
PDs by passing filtered PD data to \code{dfPD}.
}
\section{Data specification}{
\tabular{llllll}{
   \strong{Domain} \tab \strong{Column Key} \tab \strong{Default Value} \tab \strong{Required?} \tab \strong{Require Unique Values?} \tab \strong{Accept NA/Empty Values?} \cr
   dfSUBJ \tab strSiteCol \tab siteid \tab TRUE \tab FALSE \tab FALSE \cr
   dfSUBJ \tab strIDCol \tab subjid \tab TRUE \tab TRUE \tab FALSE \cr
   dfSUBJ \tab strTimeOnStudyCol \tab timeonstudy \tab TRUE \tab FALSE \tab TRUE \cr
   dfPD \tab strIDCol \tab subjid \tab TRUE \tab FALSE \tab FALSE \cr
}
}

\examples{
# Run with defaults.
dfInput <- PD_Map_Raw_binary()

# Run with error checking and message log.
dfInput <- PD_Map_Raw_binary(bReturnChecks = TRUE, bQuiet = FALSE)

}
