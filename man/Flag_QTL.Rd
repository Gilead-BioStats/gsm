% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Flag_QTL.R
\name{Flag_QTL}
\alias{Flag_QTL}
\title{Flag QTL}
\usage{
Flag_QTL(dfAnalyzed, vThreshold = NULL)
}
\arguments{
\item{dfAnalyzed}{data.frame where flags should be added.}

\item{vThreshold}{Numeric value representing the threshold. NA and NaN values in strColumn are given NA flag values.}
}
\value{
\code{data.frame} with "Flag" column added
}
\description{
This function flags a study-level QTL metric by comparing the mean and lower confidence bound for the metric to a single threshold.
}
\details{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\section{Data Specification}{

\code{Flag_NormalApprox} is designed to support the input data (\code{dfAnalyzed}) from \code{Analyze_QTL} function.
At a minimum, the input data must have numeric \code{Score} and \code{LowCI} columns that will be compared to the specified threshold (\code{vThreshold}) to
calculate a new \code{Flag} column.
}

\examples{
# binary
dfTransformed <- tibble::tibble(
  GroupID      = c("AA-AA-000-0000"),
  Numerator    = c(122),
  Denominator  = c(1301),
  Metric       = c(0.0938)
)

dfAnalyzed <- Analyze_QTL(dfTransformed, strOutcome = "binary")
dfFlagged <- Flag_QTL(dfAnalyzed, vThreshold = 0.2)

# rate
dfTransformedRate <- tibble::tibble(
  GroupID      = c("AA-AA-000-0000"),
  Numerator    = c(4473),
  Denominator  = c(6.19),
  Metric       = c(723)
)
dfAnalyzed <- Analyze_QTL(dfTransformedRate, strOutcome = "rate")
dfFlagged <- Flag_QTL(dfAnalyzed, vThreshold = 0.01)

}
