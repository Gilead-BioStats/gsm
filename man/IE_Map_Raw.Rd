% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IE_Map_Raw.R
\name{IE_Map_Raw}
\alias{IE_Map_Raw}
\title{Inclusion/Exclusion Assessment Mapping from Raw Data- Make Input Data}
\usage{
IE_Map_Raw(
  dfIE,
  dfSUBJ,
  mapping = NULL,
  vCategoryValues = c("Exclusion", "Inclusion"),
  vExpectedResultValues = c(0, 1)
)
}
\arguments{
\item{dfIE}{ie dataset with columns SUBJID and values specified in strCategoryCol and strValueCol.}

\item{dfSUBJ}{Subject-level Raw Data required columns: SubjectID SiteID}

\item{mapping}{List containing expected columns in each data set.}

\item{vCategoryValues}{Category values (of column in dfIE specified by strCategoryCol) Default =  c("Exclusion","Inclusion"). Category values must be in the same order as \code{vExpectedResultValues}.}

\item{vExpectedResultValues}{Vector containing expected values for the inclusion/exclusion criteria stored in dfIE$IEORRES. Defaults to c(0,1) where 0 is expected when dfIE$IECAT == "Exclusion" and 1 is expected when dfIE$IECAT=="Inclusion". Values must be in the same order as \code{vCategoryValues}.}
}
\value{
Data frame with one record per participant giving the number of inclusion/exclusion criteria the participant did not meet as expected. Expected columns: SubjectID, SiteID, Count
}
\description{
Convert from raw data format to needed input format for Inclusion/Exclusion Assessment.
}
\details{
This function creates the required input for \code{\link{IE_Assess}}.
}
\section{Data Specification}{


The following columns are required:
\itemize{
\item \code{dfIE}
\itemize{
\item \code{SubjectID} - Unique subject ID
\item Value specified in \code{mapping} - IE Category; "IECAT_STD" by default
\item Value specified in \code{mapping} - Incl criteria not met Excl criteria met; "IEORRES" by default
}
\item \code{dfSUBJ}
\itemize{
\item \code{SubjectID} - Unique subject ID
\item \code{SiteID} - Site ID
}
}
}

\examples{

dfInput <- IE_Map_Raw(
   clindata::rawplus_ie,
   clindata::rawplus_subj,
   vCategoryValues= c("EXCL","INCL"),
   vExpectedResultValues=c(0,1)
)

}
